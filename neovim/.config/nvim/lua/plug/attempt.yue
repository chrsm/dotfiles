import "macros" as { $ }

support =
  * {
    "lua",
    ->
      "local inspect = require(\"inspect\")\n"
    "w | luafile %"
  }
  * {
    "go"
    ->
      ""
  }
  * {
    "yue"
    ->
      "import p from yue\n" ..
      "import \"inspect\" as inspect\n"
    "w | !yue -e %"
  }
  * {
    "sh"
    ->
      "#!/bin/env bash\n"
    "w !bash"
  }

cfg =
  autosave: true
  list_buffers: true
  ext_options: {}
  initial_content: {}
  run: {}

for v in *support
  { lang, init, run } = v

  cfg.ext_options[] = lang
  cfg.initial_content[lang] = init
  cfg.run[lang] = run if run

export default {
  config: ->
    import "attempt" as at
    import "telescope" as ts
    import "which-key" as wk

    at.setup cfg
    ts.load_extension "attempt"

    wk.register {
      name: "attempt"
      n:
        * ":lua require('attempt').new_select()<CR>"
        * "Open new scratch file"
      l:
        * ":Telescope attempt<CR>"
        * "List scratch files"
      r:
        * ":lua require('attempt').run()<CR>"
        * "Run current scratch file"
    }, { mode: "n", prefix: "<leader>a", noremap: true, silent: true }
}

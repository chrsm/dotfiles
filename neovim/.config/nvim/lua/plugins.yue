import "macros" as { $ }

plugs =
  * {
    "nvim-treesitter/nvim-treesitter",
    run: $do_run "treesitter"
    config: $do_cfg "treesitter"
  }
  * "tpope/vim-eunuch"
  * "nvim-lua/plenary.nvim"
  * {
    "nvim-telescope/telescope.nvim"
    config: $do_cfg "telescope"
    dependencies:
      * "nvim-lua/plenary.nvim"
      * "nvim-lua/popup.nvim"
  }
  * {
    "nvim-telescope/telescope-ui-select.nvim"
    config: $do_cfg "telescope_ui_select"
    dependencies:
      "nvim-telescope/telescope.nvim"
  }
  * {
    "elihunter173/dirbuf.nvim"
    config: $do_cfg "dirbuf"
  }
  * {
    "talek/obvious-resize"
    config: $do_cfg "obvious_resize"
  }
  * {
    "lukas-reineke/indent-blankline.nvim"
    config: $do_cfg "indent"
  }
  * {
    "ahmedkhalf/project.nvim"
    config: $do_cfg "project"
    dependencies:
      * "nvim-telescope/telescope.nvim"
  }
  * { -- layout preserving bdelete
    "famiu/bufdelete.nvim"
    config: $do_cfg "bufdelete"
  }
  * {
    "folke/which-key.nvim"
    config: ->
      import "which-key" as wk

      wk.setup {}
  }

  -- note taking
  * {
    "renerocksai/telekasten.nvim"
    config: $do_cfg "telekasten"
    dependencies:
      * "renerocksai/calendar-vim"
  }

  -- color schemes
  * {
    "jesseleite/nvim-noirbuddy"
    config: ->
      import "noirbuddy" as nb

      nb.setup
        preset: "minimal"
        colors:
          background: "#262626"
          primary: "#a790d5"

    dependencies:
      * { "tjdevries/colorbuddy.nvim", branch: "dev" }
  }

  -- ui
  * "nvim-lua/popup.nvim"
  * {
    "akinsho/bufferline.nvim"
    config: $do_cfg "bufferline"
    dependencies:
      * "kyazdani42/nvim-web-devicons"
  }
  * {
    "nvim-lualine/lualine.nvim"
    config: $do_cfg "lualine"
    dependencies:
      * "kyazdani42/nvim-web-devicons"
  }
  * {
    "folke/twilight.nvim",
    config: $do_cfg "twilight"
  }
  * {
    "numToStr/FTerm.nvim"
    config: $do_cfg "fterm"
  }
  * {
    "shortcuts/no-neck-pain.nvim"
    config: ->
      import "no-neck-pain" as nnp

      nnp.setup!
  }

  -- wip
  --[[* {
    "~/src/nvim-buf"
    dependencies:
      * "nvim-lua/plenary.nvim"
    config: -> require("buf").setup!
  }
  * {
    "~/src/impulse.nvim"
    dependencies:
      * "MunifTanjim/nui.nvim"
    config: ->
      require("impulse").setup {
        open_in_browser: "/mnt/c/Program Files/Mozilla Firefox/firefox.exe"
      }

      import "which-key" as wk
      wk.register {
        "s":
          * ":lua require('impulse').menu_search()<CR>"
          * "impulse.nvim: search menu"
        "l":
          * ":lua require('impulse').follow_link()<CR>"
          * "impulse.nvim: follow link"
      }, { mode: "n", prefix: "<leader>pf", noremap: true }
  }]]

  -- dev related, but not lang-specific
  * "rhysd/committia.vim"
  * {
    "sindrets/diffview.nvim",
    config: $do_cfg "diffview",
    dependencies:
      * "nvim-lua/plenary.nvim"
  }
  * {
    "TimUntersberger/neogit",
    config: $do_cfg "neogit"
    dependencies:
      * "nvim-lua/plenary.nvim"
      * "sindrets/diffview.nvim"
  }
  * {
    "ThePrimeagen/git-worktree.nvim"
    config: $do_cfg "worktree"
    dependencies:
      * "nvim-lua/plenary.nvim"
      * "nvim-telescope/telescope.nvim"
  }
  * {
    "ethanholz/nvim-lastplace"
    config: $do_cfg "lastplace"
  }
  * {
    "mfussenegger/nvim-dap"
    config: $do_cfg "dap"
  }
  * {
    "rcarriga/nvim-dap-ui"
    config: $do_cfg "dap_ui"
    dependencies:
      * "mfussenegger/nvim-dap"
  }
  * {
    "theHamsta/nvim-dap-virtual-text"
    config: $do_cfg "dap_vtext"
    dependencies:
      * "mfussenegger/nvim-dap"
  }
  * {
    "m-demare/attempt.nvim"
    config: $do_cfg "attempt"
    dependencies:
      * "nvim-telescope/telescope.nvim"
      * "nvim-telescope/telescope-ui-select.nvim"
  }

  -- LSP and related tooling
  * "williamboman/mason.nvim"
  * {
    "williamboman/mason-lspconfig.nvim"
    dependencies:
      * "williamboman/mason.nvim"
      * "neovim/nvim-lspconfig"
    config: ->
      (require "mason").setup!
      (require "mason-lspconfig").setup!
  }
  * 'jay-babu/mason-nvim-dap.nvim'
  * {
    "VonHeikemen/lsp-zero.nvim"
    dependencies:
      * 'neovim/nvim-lspconfig'
      * 'williamboman/mason.nvim'
      * 'williamboman/mason-lspconfig.nvim'
      * 'hrsh7th/nvim-cmp'
      * 'hrsh7th/cmp-buffer'
      * 'hrsh7th/cmp-path'
      * 'saadparwaiz1/cmp_luasnip'
      * 'hrsh7th/cmp-nvim-lsp'
      * 'hrsh7th/cmp-nvim-lua'
      * 'L3MON4D3/LuaSnip'
      * 'rafamadriz/friendly-snippets'
  }
  * {
    "mfussenegger/nvim-lint"
    config: ->
      import "lint" as lint

      lint.linters_by_ft = {
        go:
          * "golangcilint"
      }

      vim.api.nvim_create_autocmd { "BufWritePost" },
        callback: ->
          lint.try_lint!
  }
  * "mhartington/formatter.nvim"
  * "nvim-lua/lsp-status.nvim"
  * "nvim-lua/diagnostic-nvim"
  * "glepnir/lspsaga.nvim"
  * {
    "hrsh7th/nvim-cmp"
    config: $do_cfg "cmp"
    wants:
      * "LuaSnip"
    dependencies:
      * "hrsh7th/cmp-nvim-lsp"
      * "hrsh7th/cmp-buffer"
      * "ray-x/cmp-treesitter"
      * {
        "ray-x/lsp_signature.nvim"
        config: $do_cfg "lsp_sig"
      }
      * {
        "L3MON4D3/LuaSnip"
        wants: "friendly-snippets"
        config: $do_cfg "luasnip"
      }
      * "onsails/lspkind.nvim"
  }
  * {
    "folke/trouble.nvim"
    config: ->
      import "trouble" as t
      t.setup!

      vim.diagnostic.config
        virtual_text: true
  }

  -- language specific
  * "pigpigyyy/Yuescript-vim"

  * {
    "leoluz/nvim-dap-go"
    config: $do_cfg "dap_go"
  }

  * {
    "vim-crystal/vim-crystal"
  }

rocks =
  * "lua-cjson"
  * "luafilesystem"
  * "lsqlite3"
  * "xmlua"
  * "http"

export default {
  setup: () ->
    import 'lazy' as lazy

    lazy.setup plugs, {}
}
